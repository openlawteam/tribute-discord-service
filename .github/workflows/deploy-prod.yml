name: GKE Production Deployment

on:
  push:
    tags:
      - v*

env:
  ## Required Env Vars
  # The id of the google cloud project that you want to deploy to
  GCP_PROJECT_ID: thelao
  # The github repo name that will be used to build the project docker image
  GITHUB_REPO_NAME: tribute-discord-service
  # The name of the deployment file in openlawteam/infrastructure repo, e.g: tribute-discord-deployment.yaml
  DEPLOYMENT_FILE: tribute-discord-deployment.yaml
  # The main/master branch of your new github project. It will be used to compose the docker image tag.
  DEPLOYMENT_BRANCH: main
  # Do not change the env vars below:
  INFRA_REPO: openlawteam/infrastructure
  DEPLOYMENT_FOLDER: gke-projects/${{ env.GCP_PROJECT_ID }}/prod/deployments/
  IMAGE_NAME: ${{ env.GCP_PROJECT_ID }}/${{ env.GITHUB_REPO_NAME }}
  REGISTRY_HOSTNAME: gcr.io
  GIT_COMMITTER_NAME: 'Pizza Dog'
  GIT_COMMITTER_EMAIL: 'dev@tributelabs.xyz'
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check available environment variables
        uses: actions/checkout@v2

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v2.x

      - name: Set up Google Cloud Platform SDK and authenticate
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GPC_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_THELAO_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for GCP credential helper
        run: gcloud --quiet auth configure-docker

      - name: Build and Publish Docker Image to GCR.io
        run: |
          export TAG=${{ env.GITHUB_REF_SLUG }}
          echo $TAG
          docker build -t "$REGISTRY_HOSTNAME"/${{ env.IMAGE_NAME }}:"$TAG" .
          docker push "$REGISTRY_HOSTNAME"/${{ env.IMAGE_NAME }}:"$TAG"
          docker tag "$REGISTRY_HOSTNAME"/${{ env.IMAGE_NAME }}:"$TAG" "$REGISTRY_HOSTNAME"/${{ env.IMAGE_NAME }}:${{ env.DEPLOYMENT_BRANCH }}
          docker push "$REGISTRY_HOSTNAME"/${{ env.IMAGE_NAME }}:${{ env.DEPLOYMENT_BRANCH }}
          
      - name: Checkout openlawteam/infrastructure repo
        uses: actions/checkout@v2
        with: 
          repository: ${{ env.INFRA_REPO }}
          token: ${{ secrets.PAT_OLBOT_PUB_REPOS_RW }}

      - name: Update the prod image tag
        run: |
          cd ${{ env.DEPLOYMENT_FOLDER }}
          export TAG=${{ env.GITHUB_REF_SLUG }}
          echo $TAG
          ls
          sed -i "s|${{ env.IMAGE_NAME }}:v.*|${{ env.IMAGE_NAME }}:$TAG|g" ${{ env.DEPLOYMENT_FILE }}
          git config --local user.email ${{ env.GIT_COMMITTER_EMAIL }}
          git config --local user.name ${{ env.GIT_COMMITTER_NAME }}
          git commit -am "auto-release(prod): ${{ env.IMAGE_NAME }}:$TAG"
          git show

      - name: Push changes to openlawteam/infrastructure repo
        uses: ad-m/github-push-action@master
        with:
          repository: ${{ env.INFRA_REPO }}
          github_token: ${{ secrets.PAT_OLBOT_PUB_REPOS_RW }}
          branch: master
