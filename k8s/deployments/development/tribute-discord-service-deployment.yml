apiVersion: apps/v1
kind: Deployment
metadata:
  name: tribute-discord-service-deployment
  labels:
    app: tribute-discord-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tribute-discord-service
  template:
    metadata:
      labels:
        app: tribute-discord-service
    spec:
      containers:
        # [START tribute-discord-service container]
        - name: tribute-discord-service
          # using the Cloud Code extension or skaffold (from the command-line or
          # via the deploy GH Action) to deploy will automatically generate and
          # append the tag used for the deployment
          image: gcr.io/thelao/tribute-discord-service
          ports:
            - containerPort: 3000
          env:
            # [START env_vars]
            - name: GOOGLE_ID
              value: "276009010070-8ea4nsqsb6k6on32743bl6pcr558pti6.apps.googleusercontent.com"
            - name: GOOGLE_SECRET
              valueFrom:
                secretKeyRef:
                  name: coupon-manager-secrets
                  key: GOOGLE_SECRET
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: coupon-manager-secrets
                  key: SENDGRID_API_KEY
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: DATABASE_URL
              value: postgres://postgres:$(POSTGRES_PASSWORD)@localhost:5432/coupon-manager?synchronize=true&schema=public
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/db
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5

          # define expected resource usage
          resources: {}

        # [START sqlcloud proxy container]
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            [
              "/cloud_sql_proxy",
              "-instances=thelao:us-east4:dev-db=tcp:5432",
              "-credential_file=/secrets/cloudsql/credentials.json",
              "-log_debug_stdout=true",
            ]
          # [START cloudsql_security_context]
          securityContext:
            runAsUser: 2 # non-root user
            allowPrivilegeEscalation: false
          # [END cloudsql_security_context]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
          # empty resources to satisfy linter
          resources: {}

      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      # [END volumes]
